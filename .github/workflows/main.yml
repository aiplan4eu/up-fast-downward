name: Deploy

on: push

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build manylinux Python wheels
        uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2014_x86_64
        with:
          python-versions: 'cp36-cp36m cp37-cp37m'

      - uses: actions/upload-artifact@master
        with:
          name: linux-wheels
          path: dist/*-manylinux*.whl


  build-windows:
    name: Build wheels on ${{ matrix.os }}
    runs-on: windows-2022
    env:
      CC: cl
      CXX: cl
#      CIBW_BUILD_VERBOSITY: 3

    steps:
      - name: Clone UP Fast Downward repository
        uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.15.0

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Build 64-bit wheel
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: cp36-win_amd64
          DISTUTILS_USE_SDK: 1
          MSSdk: 1

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86

      - name: Build 32-bit wheel
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: cp36-win32
#          DISTUTILS_USE_SDK: 1
#          MSSdk: 1

      - uses: actions/upload-artifact@v3
        with:
          name: windows-wheels
          path: dist/*.whl


  build-mac:
    name: Build wheels on ${{ matrix.os }}
    runs-on: macOS-11
    steps:
      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.11.2

      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist

      - uses: actions/upload-artifact@v3
        with:
          name: mac-wheels
          path: dist/*.whl
  
  run-tox-test:
    name: Test wheels
    needs: [build-linux, build-mac]
    runs-on: ${{ matrix.version.os }}
    strategy:
      matrix:
        version:
          - {os: ubuntu-20.04, python: '3.8'}
          - {os: ubuntu-22.04, python: '3.10'}
          - {os: macOS-11, python: '3.10'}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - uses: actions/download-artifact@master
        with:
          name: linux-wheels
          path: dist

      - uses: actions/download-artifact@master
        with:
          name: mac-wheels
          path: dist

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.version.python }}

      - name: Install dependencies
        run: |
          pip3 install tox

      - name: Run basic test 
        run: |

          echo ${{ github.workspace }}
          pwd
          cd misc/
          #PIP_FIND_LINKS='/home/runner/work/up-fast-downward/up-fast-downward/dist' tox -e unified-planning
          PIP_FIND_LINKS='${{ github.workspace }}/dist' tox -e unified-planning


  run-tox-test-windows:
    name: Test wheels
    needs: [build-windows]
    runs-on: windows-2022
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - uses: actions/download-artifact@master
        with:
          name: windows-wheels
          path: dist

      - name: Install Python
        uses: actions/setup-python@v4

      - name: Install dependencies
        run: |
          pip3 install tox

      - name: Run basic test 
        run: |

          cd misc/
          echo ${{ github.workspace }}
          $env:PIP_FIND_LINKS='${{ github.workspace }}\dist'; tox -e unified-planning


#  deploy-pypi:
#    runs-on: ubuntu-latest
#    needs: [build-linux, build-win-and-mac]
#    if: github.ref == 'refs/heads/main' # We only deploy on master commits
#
#    steps:
#      - uses: actions/download-artifact@master
#        with:
#          name: linux-wheels
#          path: dist
#
#      - uses: actions/download-artifact@master
#        with:
#          name: windows-wheels
#          path: dist
#
#      - uses: actions/download-artifact@master
#        with:
#          name: mac-wheels
#          path: dist
#
#      - run: ls dist
#
#      - name: Upload to PyPI
#        uses: pypa/gh-action-pypi-publish@master
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
